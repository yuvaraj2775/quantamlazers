const handleSubmit = async (e) => {
    e.preventDefault();
    
    // Scroll to the form at submission
    if (formRef.current) {
      formRef.current.scrollIntoView({ behavior: "smooth", block: "start" });
    }

    const method = editingItem ? "PUT" : "POST";
    const endpoint = editingItem ? `/api/itemmaster/${editingItem}` : "/api/itemmaster";

    try {
      const response = await fetch( "/api/itemmaster", {
        method,
        body: JSON.stringify({
          ...formData,
          quantity: Number(formData.qty),
          id: editingItem || undefined,
          enabled: editingItem ? enabledItems[editingItem] : 0,
        }),
        headers: { "Content-Type": "application/json" },
      });

      const result = await response.json();
      if (!response.ok) throw new Error(result.error || "Something went wrong");

      if (editingItem) {
        setFetched((prev) =>
          prev.map((item) => (item.id === editingItem ? { ...item, ...formData } : item))
        );
      } else {
        setFetched((prev) => [
          ...prev,
          { ...formData, id: result.id, quantity: Number(formData.qty), enabled: 0 },
        ]);
        setEnabledItems((prev) => ({ ...prev, [result.id]: true }));
      }

      setFormData({ name: "", qty: "", description: "", comments: "" });
      setEditingItem(null);
    } catch (error) {
      console.error("Error while submitting:", error);
    }
  };